name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'denoland:')
    strategy:
      matrix:
        node: ["12.16.1"]
        deno: ["1.3.0"]
        os: [ubuntu-latest, macOS-latest, windows-latest]
    name: test in ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

			- name: Get yarn cache directory path
				id: yarn-cache-dir-path
				run: echo "::set-output name=dir::$(yarn cache dir)"

			- uses: actions/cache@v2
				id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
				with:
					path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
					key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
					restore-keys: |
						${{ runner.os }}-yarn-

      - name: Setup Deno
        uses: denolib/setup-deno@master
        with:
          deno-version: ${{ matrix.deno }}

      - name: Environment
        run: |
          node -v
          yarn --version
          deno --version

      - name: Install
        run: yarn

      - name: Check code format
        run: yarn run check

      - name: Lint
        run: yarn run lint

      - name: Test
        run: yarn run test

      - name: Compile
        run: yarn run compile

      - name: Package
        run: yarn run build

      - name: Publish
        if: |
          startsWith(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/vscode_deno' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          # https://dev.azure.com/propelml/_usersSettings/tokens
          AZURE_PAT: ${{ secrets.AZURE_PAT }}
        run: npx vsce publish --pat $AZURE_PAT
